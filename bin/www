#!/usr/bin/env node

const init = require('../app');
const bundler = require('../routes/bundler');
const online = require('../models/online')
const port = Number(process.env.PORT || 8080);

init()
    .then(app => {
        app.set('port', port);
        bundler.make_all_bundles(error => {
            if (error) process.exit(console.log(error) || 1);
            const server = app.listen(port);
            server.on('error', onError);
            server.on('listening', () => onListening(server));
            server.on('upgrade', online.onupgrade);
        });
    });

function onError (error) {
    if (error.syscall !== 'listen') throw error;

    switch (error.code) {
        case 'EACCES':
            console.error('Port ' + port + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error('Port ' + port + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening (server) {
    const address = server.address();
    console.log('Listening on ' + (typeof address === 'string' ? 'pipe ' + address : 'port ' + address.port));
}
