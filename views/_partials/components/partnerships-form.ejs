<% setI18nPrefix('components.forms') %>
<link rel="stylesheet" href="<%=md5('/css/components/partnerships-form.css')%>">
<%- include('./maintenance-warning.ejs') %>
<div id="direction-for-green-btn-click" class="form-container apply-form">
    <div class="form-header-block">
        <div class="allfields-required req"><span class="red">*</span> All fields are required.</div>
    </div>

    <%
    let i;
    let dobDays = [];
    for (i = 1; i <= 31; i++) {
        dobDays.push({
            html: i,
            value: i
        });
    }
    let dobMonths = [];
    for (i = 0; i < 12; i++) {
        dobMonths.push({
            html: $t('reg_form_live_month' + (i + 1)),
            value: i
        });
    }
    let dobYears = [];
    var currentYear = (new Date()).getFullYear();
    for (i = currentYear; i >= (currentYear - 123); i--) {
        dobYears.push({
            html: i,
            value: i
        });
    }

    let dobDay = "";
    let dobMonth = "";
    let dobYear = "";
    %>

    <form class="form-block invalid rsp-lg">
        <div class="">
            <div class="form-block__input-elements">
                <div class="second-heading">New Client?</div>
                <div class="description-form d-flex scope">
                    <div class="">
                        <img class="mr-1 att-icon" src="/img/apply/att.png" alt="">
                    </div>
                    <div class="text-att">Please complete the form and provide the additional information requested on the following page.</div>
                </div>
                <div class="flex-lg">
                    <div class="input-ele-block wd-50-lg">
                        <label for="firstname" class="input-ele-block__label">First name</label>
                        <input class="input-ele-block__input" id="firstname" type="text"
                            pattern="[A-Za-z \-]+"
                            data-model="firstNameVal" name="firstname" minlength="1" maxlength="150" required>
                    </div>
                    <div class="input-ele-block wd-50-lg">
                        <label for="lastname" class="input-ele-block__label">Last name</label>
                        <input class="input-ele-block__input" id="lastname" type="text"
                            pattern="[A-Za-z \-]+"
                            data-model="lastNameVal" name="lastname" minlength="1" maxlength="150" required>
                    </div>
                </div>
                <div class="flex-lg">
                    <div class="input-ele-block wd-50-lg">
                        <label for="emailaddress" class="input-ele-block__label">Email address</label>
                        <input class="input-ele-block__input" id="emailaddress"
                            pattern='^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
                            data-model="emailVal" type="email" name="email" maxlength="250" required>
                    </div>
                    <div class="input-ele-block d-none">
                        <input class="input-ele-block__input" id="address" type="hidden" placeholder="Street address"
                            pattern="[A-Za-z0-9 \-,.\\/]+"
                            data-model="addressVal" name="address" minlength="3" maxlength="355" value="-">
                    </div>

                    <div class="input-ele-block d-none">
                        <input class="input-ele-block__input" id="city" type="hidden" placeholder="City"
                            pattern="[A-Za-z \-]+"
                            data-model="cityVal" name="city" minlength="1" maxlength="150" value="-">
                    </div>
                    <div class="input-ele-block d-none">
                        <input class="input-ele-block__input" id="state" type="hidden" placeholder="State"
                            pattern="[A-Za-z \-]+"
                            data-model="stateVal" maxlength="250" name="state" value="-">
                    </div>
                    <div class="input-ele-block d-none">
                        <input class="input-ele-block__input" id="zip" type="hidden" placeholder="Post code"
                            data-model="zipVal" name="zip" minlength="1" maxlength="50" value="-">
                    </div>
                    <div class="input-ele-block wd-50-lg ">
                        <label for="country" class="input-ele-block__label">Country</label>
                        <select class="input-ele-block__input bor" id="country" name="country"
                                data-model="countryVal"
                                data-component="dropdown"
                                required
                        >
                        </select>
                    </div>
                </div>
                <div class="flex-lg">
                    <div class="input-ele-block wd-50-lg">
                        <label for="phone" class="input-ele-block__label">Phone</label>
                        <input class="input-ele-block__input" id="phone" type="text" minlength="7" maxlength="50" required
                            data-model="phoneNumberVal"
                            name="phone"
                            pattern="^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?: *x(\d+))?\s*$"
                            title="Please enter a valid phone or mobile number"/>
                    </div>
                    <div class="input-ele-group wd-50-lg">
                        <label for="dob_day" class="input-ele-block__label">Date of birth</label>
                        <div class="group-wrap">
                            <div class="input-ele-block bor">
                                <select class="input-ele-block__input" id="dob_day" name="day"
                                        data-model="dobDay"
                                        data-component="dropdown"
                                        required
                                >
                                    <option value=""></option>
                                    <% dobDays.forEach(item => { %>
                                    <option value="<%=item.value%>"><%=item.html%></option>
                                    <%})%>
                                </select>
                            </div>
                            <div class="input-ele-block">
                                <select class="input-ele-block__input bor" id="dob_month" name="month"
                                        data-model="dobMonth"
                                        data-component="dropdown"
                                        required
                                >
                                    <option value=""></option>
                                    <% dobMonths.forEach(item => { %>
                                    <option value="<%=item.value%>"><%=item.html%></option>
                                    <%})%>
                                </select>
                            </div>
                            <div class="input-ele-block">
                                <select class="input-ele-block__input bor" id="dob_year" name="year"
                                        data-model="dobYear"
                                        data-component="dropdown"
                                        required
                                >
                                    <option value=""></option>
                                    <% dobYears.forEach(item => { %>
                                    <option value="<%=item.value%>"><%=item.html%></option>
                                    <%})%>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="input-ele-block" style="display:none;">
                    <select class="input-ele-block__input" id="branch" name="branch" placeholder="Regulated entity"
                            data-model="branchVal"
                            data-component="dropdown"
                    >
                    </select>
                </div>
                <div class="tnc-section-md">
                    <div class="input-ele-block check">
                        <div class="wrap">
                            <input class="input-ele-block__input" id="declaration" type="checkbox" required
                                data-model="declarationVal"
                                name="declaration"
                            />
                            <div class="form-checkbox">
                                <label class="input-ele-block__label ict">Declaration</label>
                                <label for="declaration" class="for-checkbox check-dsc">
                                    I acknowledge that under my responsibility would like to proceed with the application of IC Markets a Company which is regulated by Financial Services Authority of Seychelles with Securities Dealer Licence number: SD018 and is NOT regulated in Europe and is NOT subject to the Markets in Financial Instruments Directive (“MiFID II”).
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="input-ele-block check">
                        <div class="wrap">
                            <input class="input-ele-block__input" id="tac" type="checkbox" required
                                data-model="tacVal"
                                name="tac"
                            /><label class="for-checkbox">
                                <div>
                                    <a class="tnc-link" id="accept_show">I accept Terms and Conditions</a>
                                </div>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-block__submit-button-block">
            <div class="buttons-container d-flex-center">
                <div class="button-submit">
                    <div class="submit icm-btn icm-btn-primary page-header__primary-button icmp-btn">Submit</div>
                </div>
                <div class="btn icm-btn-primary start-trading-button clear icmp-btn icmp-btn-dark">Clear</div>
            </div>
        </div>
        <div class="form-error-info" style="display: none;">
            <div>
                <div class="img-wrapper"><img class="" src="/img/apply/error.png" alt=""></div>
                <div class="error-description"></div>
            </div>
        </div>
        <div class="form-sended-info" style="display: none;">
            <div class="">
                <div class="img-wrapper"><img class="" src="/img/apply/approved.png" alt=""></div>
                <div>Submitted<br><br>You are now proceeding to Stage 2</div>
            </div>
        </div>
    </form>
    <div class="popup" id="popup">
        <div class="popup-inner">
            <div class="popup__text">
                <div class="mt-1 apply-title xs">Our terms and condition</div>
                <div class="mt-1">By making this declaration and submitting this application, I acknowledge that I am electronically signing your Terms and Conditions and related documents and that this is a legally binding contractual agreement.</div>
                <div class="mt-1">I understand that I will register for an account with Raw Trading Ltd, which is authorised and regulated by the Financial Services Authority of Seychelles Raw Trading Ltd falls outside the European regulatory framework and is not in scope of (among others) the Markets in Financial Instruments Directive (MiFID) II. I understand that there is no provision for an investor compensation scheme.</div>
                <div class="mt-1">I confirm that the decision was made independently and at your own exclusive initiative and that no solicitation or recommendation has been made by IC Markets Global or any other entity within the group.</div>
                <div class="mt-1">I confirm that I have read and understood the IC Markets Global Privacy Policy, Terms and Conditions and Cookies Policy, and I agree to be bound by these documents. I also confirm that I understand the full nature and risks of trading forex, CFDs and other derivative products.</div>
            </div>
            <a class="popup__close" id="accept_hide">✖</a>
        </div>
    </div>
</div>
<script>
    isItCySECWebSite = <%=cysec%>;

    var formApp = {
        data: function () {
            return {
                firstNameVal: "",
                lastNameVal: "",
                emailVal: "",
                dobDay: "",
                dobMonth: "",
                dobYear: "",
                countryVal: "",
                phoneNumberVal: "",
                addressVal: "",
                stateVal: "",
                zipVal: "",
                cityVal: "",
                declarationVal: "",
                tacVal: "",
                branchVal: "",

                formError: false,
                formErrorDescription: "",
                formSended: false,
                countries: [],
                userGeoIP: null
            }
        },
        mounted: function () {
            this.getCountriesAndBranches();
            $('.form-block').on('change keyup touchend', 'input, select', this.validateField.bind(this));
            $('.form-block .form-block__submit-button-block .submit').on('click touchend', this.handleFormSubmit.bind(this))
            $('.form-block .form-block__submit-button-block .clear').on('click touchend', this.handleFormClear.bind(this))

            $('#accept_show').on('click', function () {
                $('#popup').toggleClass('active', true);
            })
            $('#accept_hide').on('click', function () {
                $('#popup').toggleClass('active', false);
            })
        },
        validateField: function (e) {
            var $el = $(e.target);
            var field = $el.attr('data-model');
            this[field] = $el.val();
            if (field === 'countryVal') {
                this.onCountryChange(this[field])
            }
            $el.toggleClass('invalid', !$el[0].checkValidity());
            var $form = $el.closest('form');
            var valid = true;
            $form.find('[required]').each(function () {
                if ($(this).is('.invalid') || $(this).val() == 'off' || !$(this).val().length) {
                    valid = false;
                }
            });
            if (valid) {
                $form.find('[required]').each(function () {
                    $(this).toggleClass('invalid', !$(this)[0].checkValidity());
                    if ($(this).is('.invalid') || $(this).val() == 'off' || !$(this).val().length) {
                        valid = false;
                    }
                });
            }
            $form.toggleClass('invalid', !valid);
        },
        setBranch: function (branchSelect, countryCode) {
            var country = serverCountries.find(function (_) { return _.code === countryCode; });
            if (country && country.branching) {
                var defaultBranchByCountry = {};
                // default with status 1
                defaultBranchByCountry = country.branching.find(function (item) {
                    return item && item.status === '1' && item.default === true && (isItCySECWebSite || item.branch !== '2');
                });
                if (!defaultBranchByCountry) {
                    // any with status 1
                    defaultBranchByCountry = country.branching.find(function (item) {
                        return item && item.status === '1';
                    });
                }
                var IDs = Object.keys(
                    country.branching
                        .filter(function (_) { return !!_.branch && _.status === '1'; })
                        .map(function (_) { return _.branch; })
                        .reduce(
                            function (_set, branch) {
                                _set[branch] = true;
                                return _set;
                            },
                            {}
                        )
                );

                this.fillBranches(serverBranches.filter(function (_) { return IDs.includes(_.ID); }))

                if (defaultBranchByCountry) {
                    branchSelect.value = defaultBranchByCountry.branch;
                    this.branchVal = defaultBranchByCountry.branch;
                }
            }
        },
        onCountryChange: function (countryVal) {
           this.setPhoneByCountry(this.getCountryByCode(countryVal));
           this.setBranch(branch, countryVal);
        },
        checkEmail: function (email) {
            var $def = $.Deferred();
            this.getSignToken().then(function(token) {
                $.get("<%= config.reg_service_1_url %>?getAction=check_email&data=" + email + "&request_from=PartnershipsForm&sign=" + token).done(function (data) {
                    if (data && data !== 'used') {
                        $def.resolve(true);
                    } else {
                        $def.resolve(false);
                    }
                }).fail(function () {
                    $def.resolve(false);
                });
            });

            return $def.promise();
        },

        setError: function (error) {
            error = error || 'An error has occurred';
            var errorBlock = $('.form-error-info');
            var errorBlockText = $('.form-error-info div.error-description');
            var successBlock = $('.form-sended-info');

            successBlock.hide();
            errorBlock.show();
            errorBlockText.html(error);
        },

        clearResult: function () {
            var errorBlock = $('.form-error-info');
            var errorBlockText = $('.form-error-info div.error-description');
            var successBlock = $('.form-sended-info');

            successBlock.hide();
            errorBlock.hide();
            errorBlockText.html('');
        },

        handleFormSubmit: function (e) {
            var self = this;
            var form = $('.form-block')[0];
            $('.form-block input').change();
            var valid = form.checkValidity();
            var buttonsBlock = $('.form-block__submit-button-block')
            var d = Number(self.dobDay);
            var m = Number(self.dobMonth);
            var y = Number(self.dobYear);
            var dob = new Date(y, m, d, 23);
            var currentDate = new Date();
            var diff = currentDate - dob;
            var diffYears = diff / (1000 * 60 * 60 * 24 * 365);
            var birthYearsValid = diffYears > 18;

            var dateValid = false;
            if (dob.getDate() === d && dob.getMonth() === m && dob.getFullYear() === y) {
                dateValid = true;
            }

			var selectedCountry = self.countries.find(function (c) {
				return (c.code === self.countryVal)
			});
			var allowed = false;
			if (selectedCountry && selectedCountry.branching) {
				var branch = selectedCountry.branching.find(function (b) {
                    return b.default === true && b.status === "1";
				});
				if (branch) {
					allowed = true;
				}
			}

            if (!birthYearsValid) {
                self.setError('Individuals under 18 years of age are not allowed to join.');
                setTimeout(self.clearResult, 5000);
                return;
            }

            if (!dateValid) {
                self.setError('The date you provided is incorrect.<br><br>Please check again.');
                setTimeout(self.clearResult, 5000);
                return;
            }

            if (!allowed) {
                self.setError('We cannot proceed with your application as it is not yet available in your region.');
                setTimeout(self.clearResult, 5000);
                return;
            }

            if (form && valid && birthYearsValid && this.emailVal) {
                // hide invalid validation
                this.checkEmail(this.emailVal).then(function (canContinue) {
                    if (canContinue) {
                        var country = self.getCountryByCode(self.countryVal) || {};
                        var data = {
                            first_name: self.firstNameVal,
                            last_name: self.lastNameVal,
                            email: self.emailVal,
                            address: self.addressVal,
                            state: self.stateVal,
                            zip_code: self.zipVal,
                            city: self.cityVal,
                            country: country.name,
                            phone: self.phoneNumberVal,
                            submitIntroBroker: "Partnership",
                            branch_id: self.branchVal
                        };
                        self.onContactFormSubmit(data);
                    } else {
                        // Already USED or Incorrect EMAIL
                        self.setError('This email address is already registered with us.<br><br>If you are a client with us, apply via the client area.');
                        $('#emailaddress').toggleClass('invalid', true);
                        // show invalid email validation
                        setTimeout(self.clearResult, 3000);
                    }
                });
            } else {
                self.setError('Prease fill all required fields');
                setTimeout(self.clearResult, 3000);
            }
        },
        handleFormClear: function (e) {
            this.formErrorDescription = "";
            this.firstNameVal = "";
            this.lastNameVal = "";
            this.emailVal = "";
            this.addressVal = "";
            this.stateVal = "";
            this.zipVal = "";
            this.cityVal = "";
            this.phoneNumberVal = "";
            this.declarationVal = "";
            this.tacVal = "";
            $('.form-block input').val('')

            if (this.userGeoIP) {
                this.countryVal = this.userGeoIP.countryCode;
                $('#country').val(this.countryVal)
                this.setPhoneByCountry(this.getCountryByCode(this.userGeoIP.countryCode));
            } else {
                this.countryVal = "AU";
            }
            this.setBranch(branch, this.countryVal);
            $('.form-block').toggleClass('invalid', true);
            if (e !== true) $('.form-sended-info').hide();
        },
        getSignToken: function () {
          var $def = $.Deferred();
          $.get('<%= config.reg_service_1_url %>~get~sign~token~?nocache=' + Date.now()).done(function (token) {
              $def.resolve(token);
          }).fail(function () {
              $def.resolve(null);
          });

          return $def.promise();
        },
        getCountryByCode: function (code) {
            var res = null;
            var c;
            for (var i in this.countries) {
                c = this.countries[i];
                if (c && c.code == code) {
                    res = c;
                    break;
                }
            }
            return res;
        },
        getUserGeoIP: function () {
            var $def = $.Deferred();
            $.get("https://pro.ip-api.com/json/?key=xylJvTwPTjbRGfQ").done(function(done) {
                $def.resolve(done);
            }).fail(function(fail) {
                console.log('FAIL: https://pro.ip-api.com/json/?key=xylJvTwPTjbRGfQ', fail);
                $def.reject(null);
            });
            return $def.promise();
        },
        detectUserCountry: function () {
            let self = this;
            this.getUserGeoIP().then(function (userGeoIP) {
                if (userGeoIP) {
                    $('#country').val(userGeoIP.countryCode)
                    self.countryVal = userGeoIP.countryCode;
                    self.setBranch(branch, self.countryVal);
                    self.userGeoIP = userGeoIP;
                    self.setPhoneByCountry(self.getCountryByCode(userGeoIP.countryCode));
                }
            });
        },
        setPhoneByCountry: function (country) {
            if (country) {
                this.phoneNumberVal = country.tel;
                $('#phone').val(country.tel);
            }
        },
        getCountriesAndBranches: function () {
            let self = this;
            this.getSignToken().then(function(token) {
                $.ajax({
                    dataType: "json",
                    url: "<%= config.reg_service_1_url %>?getData&request_from=PartnershipsForm&sign=" + token,
                    success: function (data) {
                        window['serverCountries'] = data.countries;
                        window['serverBranches'] = isItCySECWebSite ? data.branches : data.branches.filter(function (b) { return b.ID !== '2'; });
                        self.fillBranches(serverBranches);
                        self.fillCountries(data.countries);
                        self.detectUserCountry();
                    },
                    fail: function (err) {
                        console.error('FAIL', err);
                    }
                });
            });
        },

        fillCountries: function (countries) {
          this.countries = countries
          countries.forEach(function (country) {
              $('#country').append($('<option>', {
                html: country.name,
                value: country.code,
                'data-phone': country.phone
              }))
          })
        },
        fillBranches: function (branches) {
            $('#branch').empty()
            branches.forEach(function(branch) {
                $('#branch').append($('<option>', {
                    html: branch.Name,
                    value: branch.ID
                }))
            })
        },

        onContactFormSubmit: function (formInput) {
            let self = this;
            let buttonsBlock = document.querySelector('.form-block__submit-button-block');
            if (buttonsBlock) buttonsBlock.style.display = 'none';
            this.getSignToken().then(function(token) {
                formInput.ip = (self.userGeoIP && self.userGeoIP.query) ? self.userGeoIP.query : null;
                formInput.sign = token;
                $.ajax({
                    type: 'POST',
                    url: '<%= config.reg_service_1_url %>',
                    dataType: "json",
                    data: formInput
                }).done(function(data) {
                    self.formErrorDescription = "";
                    console.log("Success", data);
                    let clearButton = $('.form-block .form-block__submit-button-block .clear');
                    self.formSended = true;
                    if (data && data.status && data.status == "success") {
                        self.formError = false;
                        $('.form-sended-info').show();
                        setTimeout(function () {
                            var link = data.link;
                            link = link.replace(/\/ \//g, '/').replace(/%2f/g, '/').replace(/%3f/g, '?');
                            link = link.replace("ReturnUrl=/OpenAccount/OpenDemoAccount", "ReturnUrl=/Requests/RequestPartner")
                            window.location = link;
                        }, 1000);
                    } else {
                        if (data && data.error && data.error.indexOf("ErrorMessage") !== -1) {
                            var desc = JSON.parse(data.error);
                            self.setError(desc["ErrorMessage"]);
                        } else {
                          self.setError();
                        }
                        setTimeout(function () {
                            self.handleFormClear()
                        }, 3000);
                    }
                }).fail(function(error) {
                  self.setError()
                });
            });
        }
    }

    $(document).ready(formApp.mounted.bind(formApp));

</script>
